import * as pb from "../proto/orchestrator_service_pb";
import { TOrchestrator } from "../types/orchestrator.type";
import { OrchestrationExecuteResult } from "./orchestration-execute-result";
import { Registry } from "./registry";
export declare class OrchestrationExecutor {
    _generator?: TOrchestrator;
    _registry: Registry;
    _isSuspended: boolean;
    _suspendedEvents: pb.HistoryEvent[];
    constructor(registry: Registry);
    execute(instanceId: string, oldEvents: pb.HistoryEvent[], newEvents: pb.HistoryEvent[]): Promise<OrchestrationExecuteResult>;
    private processEvent;
}
